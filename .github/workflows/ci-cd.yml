name: CI/CD Pipeline

on:
  workflow_dispatch

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  Tests:
    runs-on: ubuntu-22.04

    env:
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      NODE_ENV: testing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Docker Images
        run: |
          docker-compose build
        
      - name: Install Node.js Dependencies
        run: |
          docker-compose run express-app npm install
  
      - name: Run Tests
        run: |
          docker-compose run express-app npm test

  Infrastructure-Setup:
    runs-on: ubuntu-22.04
    needs: Tests
    if: success()
    defaults:
      run:
        shell: bash
        working-directory: iac/terraform

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true           

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  Build-and-push-Docker-Image:
    runs-on: ubuntu-22.04
    needs: Infrastructure-Setup
    if: success()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker-compose build

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker-compose push

  Deploy-Application:
    runs-on: ubuntu-22.04
    needs: Build-and-push-Docker-Image
    if: success()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
        
      - name: SSH into EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.plan.outputs.ec2_public_ip }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/mental-health
            docker-compose pull
            docker-compose down
            docker-compose up -d

