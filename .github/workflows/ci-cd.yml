name: CI/CD Pipeline

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  Tests:
    runs-on: ubuntu-22.04

    env:
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      NODE_ENV: testing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Docker Images
        run: |
          docker-compose build
        
      - name: Install Node.js Dependencies
        run: |
          docker-compose run express-app npm install
  
      - name: Run Tests
        run: |
          docker-compose run express-app npm test

  Infrastructure-Setup:
    runs-on: ubuntu-22.04
    needs: Tests
    if: success()
    defaults:
      run:
        shell: bash
        working-directory: iac/terraform

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      # Add Docker permissions
      - name: Add Docker permissions
        run: |
          sudo usermod -aG docker $USER
          sudo chmod 666 /var/run/docker.sock

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true           

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  Deploy-Application:
    runs-on: ubuntu-22.04
    needs: Infrastructure-Setup
    if: success()
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      
      - name: Get EC2 instance IP address
        id: get_ec2_ip
        run: |
          INSTANCE_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=mental-health" --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)
          echo "::set-output name=instance_ip::$INSTANCE_IP"

      - name: Print the EC2 instance IP address
        run: echo "${{ steps.get_ec2_ip.outputs.instance_ip }}"
  
      - name: SSH into EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.get_ec2_ip.outputs.instance_ip }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ -d "~/mental-health-backend" ]; then
              cd ~/mental-health-backend
              git pull --rebase
            else
              sudo yum install -y docker
              sudo yum update -y
              sudo yum install -y git
              sudo usermod -aG docker ec2-user
              sudo service docker start
              sudo systemctl enable docker
              sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              docker-compose version
              git clone https://github.com/nimishgj/mental-health-backend.git
              cd mental-health-backend/
            fi
      
            # Populate .env file
            echo "NODE_ENV=production" > .env
            echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
            echo "MONGO_EXPRESS_USERNAME=${{ secrets.MONGO_EXPRESS_USERNAME }}" >> .env
            echo "MONGO_EXPRESS_PASSWORD=${{ secrets.MONGO_EXPRESS_PASSWORD }}" >> .env
      
            # Start services
            echo "if conditions done"
            sudo docker-compose build
            sudo docker-compose run express-app npm install
            sudo docker-compose up -d
