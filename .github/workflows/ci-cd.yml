name: CI/CD Pipeline

on:
  workflow_dispatch

jobs:
  Tests:
    runs-on: ubuntu-22.04

    env:
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      NODE_ENV: testing

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Docker Images
        run: |
          docker-compose build
        
      - name: Install Node.js Dependencies
        run: |
          docker-compose run express-app npm install
  
      - name: Run Tests
        run: |
          docker-compose run express-app npm test

  Infrastructure-Setup:
    runs-on: ubuntu-22.04
    needs: Tests
    if: success()
    defaults:
      run:
        working-directory: iac/terraform

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-south-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0

      - name: Initialize Terraform
        run: terraform init -input=false
  
      - name: Check Terraform Formatting
        run: terraform fmt -check
  
      - name: Validate Terraform
        run: terraform validate
  
      - name: Plan Terraform
        run: terraform plan -input=false -var-file=secrets.tfvars

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve -var-file=secrets.tfvars -auto-approve
